apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        String sharedTestDir = 'src/sharedTest/java'
        test {
            java.srcDir sharedTestDir
        }
        androidTest {
            java.srcDir sharedTestDir
        }
    }

    defaultConfig {
        applicationId "com.magl.buttontoaction"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"
                ]
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'

        }
    }


// Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true

        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

    buildFeatures {
        dataBinding = true
    }
    namespace 'com.magl.buttontoaction'
}

dependencies {
    coreLibraryDesugaring("com.android.tools:desugar_jdk_libs:1.1.5")
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin_version"
    // App Compat
    implementation "com.android.support:appcompat-v7:$versions.app_compat"
    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
    // Material Design
    implementation "com.google.android.material:material:$versions.material"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle_extensions"
    // Core with Ktx
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "androidx.fragment:fragment-ktx:$versions.fragment"
    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlin_coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlin_coroutines"
    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$versions.retrofit_coroutines_adapter"
    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$versions.recyclerview"
    // Logging
    implementation "com.jakewharton.timber:timber:$versions.timber"
    // Moshi
    implementation "com.squareup.moshi:moshi:$versions.moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$versions.moshi"
    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$versions.retrofit"
    // Ktx with LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$versions.ktx_livedata"
    // OkHttp interceptor
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttp_logging_interceptor"
    // Dagger
    implementation "com.google.dagger:dagger-android:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    kapt "com.google.dagger:dagger-compiler:$versions.dagger"
    kapt "com.google.dagger:dagger-android-processor:$versions.dagger"
    // Work Manager
    implementation("androidx.work:work-runtime-ktx:$versions.work_manager")
    // Room
    implementation "androidx.room:room-runtime:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    implementation "androidx.room:room-ktx:$versions.room"

    // Local unit tests
    testImplementation "junit:junit:$versions.junit"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.test_coroutines"
    testImplementation "org.mockito:mockito-core:$versions.mockito"
    testImplementation "com.nhaarman:mockito-kotlin:$versions.mockito_kotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin_test_junit"
    testImplementation "androidx.arch.core:core-testing:$versions.arch_core_testing"
    testImplementation "org.hamcrest:hamcrest-library:$versions.hamcrset"
}
